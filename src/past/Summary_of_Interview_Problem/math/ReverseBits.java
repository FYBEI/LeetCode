package past.Summary_of_Interview_Problem.math;

/**
 * 颠倒给定的 32 位无符号整数的二进制位。
 *
 * 示例 1：
 *
 * 输入: 00000010100101000001111010011100
 * 输出: 00111001011110000010100101000000
 * 解释: 输入的二进制串 00000010100101000001111010011100 表示无符号整数 43261596，
 *      因此返回 964176192，其二进制表示形式为 00111001011110000010100101000000。
 * 示例 2：
 *
 * 输入：11111111111111111111111111111101
 * 输出：10111111111111111111111111111111
 * 解释：输入的二进制串 11111111111111111111111111111101 表示无符号整数 4294967293，
 *      因此返回 3221225471 其二进制表示形式为 10111111111111111111111111111111 。
 */
public class ReverseBits {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {
        int res = 0;
        for (int i = 0; i < 32; i++){
            // 结果左移一位
            res <<= 1;
            // res加上n的最后一位数字，1的二进制为0001，n&1只保留n的最后一位，其余变0，再与res进行|运算，之前的位数不影响
            res |= n&1;
            // n右移一位，去掉最后一个数字
            n >>= 1;
        }

        return res;
    }
}
